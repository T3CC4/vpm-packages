name: Build Repo Listing
on: 
  workflow_dispatch:
  push:
    branches: main
    paths: 
      - source.json
      - Website/**

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write
  
# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true
  
env:
  listPublishDirectory: Website
  pathToCi: ci

jobs:
  build-listing:
    name: build-listing
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main repository
        uses: actions/checkout@v4
        
      - name: Checkout package list action
        uses: actions/checkout@v4
        with:
          repository: vrchat-community/package-list-action
          path: ${{env.pathToCi}}
          clean: false
          
      - name: Restore Cache
        uses: actions/cache@v4
        with:
          path: |
            ${{env.pathToCi}}/.nuke/temp
            ~/.nuget/packages
          key: ${{ runner.os }}-${{ hashFiles('**/global.json', '**/*.csproj') }}-${{ github.run_number }}
          
      - name: Add cache-busting timestamp
        run: |
          echo "<!-- Cache bust: $(date +%s) -->" >> ${{env.listPublishDirectory}}/index.html
          echo "/* Cache bust: $(date +%s) */" >> ${{env.listPublishDirectory}}/styles.css
          echo "// Cache bust: $(date +%s)" >> ${{env.listPublishDirectory}}/app.js
          
      - name: Build Package Version Listing
        run: ${{env.pathToCi}}/build.cmd BuildMultiPackageListing --root ${{env.pathToCi}} --list-publish-directory $GITHUB_WORKSPACE/${{env.listPublishDirectory}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Clear GitHub Pages Cache
        run: |
          echo "Deployment started at: $(date)"
          echo "Build ID: ${{ github.run_number }}"
          echo "Commit SHA: ${{ github.sha }}"
          
      - name: Setup Pages
        uses: actions/configure-pages@v5
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{env.listPublishDirectory}}
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
      - name: Post-deployment cache invalidation
        run: |
          echo "::notice::Deployment completed at $(date)"
          echo "::notice::Site URL: ${{ steps.deployment.outputs.page_url }}"
          echo "::notice::Cache should clear within 5-10 minutes"
          echo "::notice::Try hard refresh (Ctrl+F5) if old content persists"
